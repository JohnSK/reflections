What happens when you initialize a repository? Why do you need to do it?

To initialize a new repository I use git init command. First, I need to create a folder and then I initialize it. After init, the folder will change to git repository and becomes tracked by git.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is a place which contains files, that have been added from working directory to git repository using git add. Especially, I would call it some kind of temporary git repository. It offers the control of the files that are not int the git repository yet and I want add them to it. I can choose what I do want or do not want to add and even commit.

How can you use the staging area to make sure you have one commit per logical change?

I can use diff command to check what changes I made to the repository. If these changes are large enough or I realize that I finished some feature, bug or I have fixed something, I will decide to make a commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Situations like making some experimental changes or making new language support. One of the other situations could occur when more people want to contribute to one project and they all working separatedly each on something different. In this case the branches will help to keep the things organized.

